{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mansi\\\\frontend\\\\memegenerator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Templates from './components/Templates';\nimport Meme from './components/Meme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [templates, setTemplates] = useState([]);\n  const [meme, setMeme] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setTemplates(data.data.memes));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MEME GENERATOR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), meme == null ? /*#__PURE__*/_jsxDEV(Templates, {\n      templates: templates,\n      setMeme: setMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Meme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXfXLD6ceVCQR3ePgNOXufz2DtE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mansi/frontend/memegenerator/src/App.js"],"names":["useState","useEffect","Templates","Meme","App","templates","setTemplates","meme","setMeme","fetch","then","res","json","data","memes"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,IAAD,CAA7B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACbQ,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAiDC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAyEG,IAAD,IAASP,YAAY,CAACO,IAAI,CAACA,IAAL,CAAUC,KAAX,CAA7F;AACA,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGP,IAAI,IAAE,IAAN,gBAAY,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEF,SAAtB;AAAiC,MAAA,OAAO,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAZ,gBAAkE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAdQJ,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport {useState,useEffect} from 'react';\nimport Templates from './components/Templates';\nimport Meme from './components/Meme';\nfunction App() {\n  const [templates,setTemplates]=useState([]);\n  const [meme,setMeme]=useState(null);\n  useEffect(()=>{\n   fetch(\"https://api.imgflip.com/get_memes\").then((res)=>res.json()).then((data)=> setTemplates(data.data.memes))\n  },[])\n  return (\n    <div className=\"App\">\n      <h1>MEME GENERATOR</h1>\n      {meme==null?(<Templates templates={templates} setMeme={setMeme}/>):<Meme/>}\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}